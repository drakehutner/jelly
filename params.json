{"name":"Jelly","tagline":"wxPython based application framework","body":"jelly\r\n=====\r\n\r\n`jelly` is a [wxPython] based application framework.\r\n\r\nThe core of `jelly` is based around a duck-typing infused plugin system, which\r\nenables the whole `jelly` application to be loosely coupled.\r\nAn event system provides a common communication interface for the different \r\napplication-parts.\r\n\r\nContents\r\n--------\r\n\r\n- *logger.py*:    Jelly utilities the [python logging facility][logging]. \r\n                  Every module assumes that a properly configured hierarchical \r\n\t          logger is present.\r\n\t          This module provides a function to create such a logger without \r\n\t          the need to know anything about the python logging facility.\r\n- *plugin.py*:    Plugin System \r\n- *event.py*:     Event System\r\n- *gui.py*:       Application Core Factory\r\n- *menu.py*:      Menu Factory\r\n- *view.py*:      View Factory\r\n- *baseobjs.py*:  Utility module with basic objects\r\n- *structure.py*: Utility module for simple struct-like object\r\n- *shortcut.py*:  Mixin to provide shortcut access\r\n\r\nHow to use\r\n----------\r\n\r\nThis is a rundown of the included *\"example.py\"* file.\r\n\r\nThe first thing do, is to initialize the logger.\r\n\r\n\tfrom logger import configureLogger\r\n\tconfigureLogger()\r\n\t\r\nSince jelly is based on wxPython, you should import wx.\r\n\t\r\n\timport wx\r\n\t\r\nImport the needed parts of Jelly.\r\n\r\n\tfrom gui import InterfaceBuilder\r\n\tfrom view import ViewBuilder\r\n\r\nCreate a new application by inheriting from the `InterfaceBuilder`.\r\n\r\n\tclass JellySampleApp(InterfaceBuilder):\r\n\r\n\t\tdef showGui(self):\r\n\t\t\tself.prepare(title=\"Jelly Example Application\", size=(400,150))\r\n\t\t\tself.show()\r\n\t\t\t\r\nCreate views, in this case a simple TextCtrl with a button, that show the text \r\nas an information-dialog if the button is clicked.\r\n\t\t\t\r\n\tclass JellySampleView(ViewBuilder):\r\n\t\t\r\n\t\tdef createView(self, parent):\r\n\t\t\tpanel = wx.Panel(parent)\r\n\t\t\tsizer = wx.BoxSizer()\r\n\t\t\t\r\n\t\t\tself.label  = wx.StaticText(panel, label=\"Input:\")\r\n\t\t\tself.edit   = wx.TextCtrl(panel)\r\n\t\t\tself.button = wx.Button(panel, label=\"Click\")\r\n\t\t\t\r\n\t\t\tsizer.Add(self.label, 0)\r\n\t\t\tsizer.Add(self.edit, 1)\r\n\t\t\tsizer.Add(self.button, 0)\r\n\t\t\t\r\n\t\t\tself.button.Bind(wx.EVT_BUTTON, self.OnClick)\r\n\t\t\t\r\n\t\t\tpanel.SetSizer(sizer)\r\n\t\t\treturn panel\r\n\t\t\t\r\n\t\tdef OnClick(self, event):\r\n\t\t\tself.coreRef.displayInformation(self.edit.GetValue())\r\n\t\t\tself.edit.SetValue(\"\")\r\n\r\nLoad your application and show the GUI.\r\n\t\t\t\r\n\tif __name__ == \"__main__\":\r\n\t\tsample = JellySampleApp()\r\n\t\tsample.showGui()\r\n\t\t\r\nAll done!\r\n\r\n\r\n[wxPython]: http://wxpython.org/\r\n[logging]: http://docs.python.org/2/library/logging.html\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}